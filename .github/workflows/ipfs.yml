name: Publish IPFS

# Controls when the action will run.
on:
  workflow_dispatch:
    secrets:
      SSHHOST:
        required: true
      SSHKEY:
        required: true
      FILEBASE_BUCKET:
        required: true
      FILEBASE_KEY:
        required: true
      FILEBASE_SECRET:
        required: true
  workflow_call:
    secrets:
      SSHHOST:
        required: true
      SSHKEY:
        required: true
      FILEBASE_BUCKET:
        required: true
      FILEBASE_KEY:
        required: true
      FILEBASE_SECRET:
        required: true

permissions:
  contents: read
  pages: write
  id-token: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_and_deploy:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          # if your default branches is not master, please change it here
          ref: code
          submodules: 'recursive'

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'
          extended: true

      - name: Update config.yml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'config.yml'
          propertyPath: 'params.robotsNoIndex'
          value: "!!bool 'true'"
          commitChange: false

      - name: Build
        run: |
          cat ./config.yml
          hugo --gc --minify --cleanDestinationDir

      - name: Generate robots.txt
        run: |
          echo "User-agent: *" > ./public/robots.txt
          echo "Disallow: /" >> ./public/robots.txt

      - name: Connect to ssh in BG
        timeout-minutes: 2
        run: | 
          echo "${{ secrets.SSHKEY }}" > ../privkey
          chmod 600 ../privkey
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSHHOST }} -i ../privkey -L 5001:localhost:5001 -fTN

      - name: IPFS upload
        uses: filebase/ipfs-action@master
        id: deploy
        timeout-minutes: 2
        with:
          path: ./public
          service: ipfs
          verbose: true
          host: localhost
          port: 5001
          protocol: http
          key: ipfs-action
      
      - name: IPFS upload to filebase
        uses: filebase/ipfs-action@master
        with:
          path: ./public
          service: filebase
          pinName: ipfs-action
          filebaseBucket: ${{ secrets.FILEBASE_BUCKET }}
          filebaseKey: ${{ secrets.FILEBASE_KEY }}
          filebaseSecret: ${{ secrets.FILEBASE_SECRET }}
          key: ipfs-action