# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the code branch
  push:
    branches: [ code ]
  pull_request:
    branches: [ code ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Checkout submodules
        run: git submodule update --init --recursive --remote

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
        
      - name: Build
        run: hugo --gc --minify --cleanDestinationDir 
        
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.TOKEN }}
          publish_branch: master
          force_orphan: true
          publish_dir: ./public
          cname: liudon.com

      - name: Connect to ssh in BG
        timeout-minutes: 2
        run: | 
          echo "${{ secrets.SSHKEY }}" > ../privkey
          chmod 600 ../privkey
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSHHOST }} -i ../privkey -L 5001:localhost:5001 -fTN

      - name: ipfs upload
        uses: aquiladev/ipfs-action@master
        id: deploy
        timeout-minutes: 2
        with:
          path: ./public
          service: ipfs
          verbose: true
          host: localhost
          port: 5001
          protocol: http
          key: self
      
      - name: ipfs upload to filebase
        uses: aquiladev/ipfs-action@master
        with:
          path: ./build
          service: filebase
          filebaseBucket: ${{ secrets.FILEBASE_BUCKET }}
          filebaseKey: ${{ secrets.FILEBASE_KEY }}
          filebaseSecret: ${{ secrets.FILEBASE_SECRET }}
